name: Build, Deploy, and APK

on:
  push:
    branches:
      - gradle

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Set up Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'

      - name: Build Hugo
        run: hugo --minify

      - name: Publish to gradle/public
        run: |
          mkdir -p gradle/public
          cp -r public/* gradle/public/

      - name: Commit and push changes to gradle/public
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add gradle/public
          git commit -m "Update static site content" || echo "No changes to commit"
          git push origin gradle
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/gradle'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./gradle/public
          publish_branch: gh-pages

  build-apk:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build APK using Docker
        run: |
          docker run --rm -v "${{ github.workspace }}:/github/workspace" -w /github/workspace mobagenie/mgbuild:v1 sh -c "
          cd gradle/public &&
          cordova create myApp com.example.myapp MyApp &&
          cd myApp &&
          cordova platform add android &&
          cordova build android --debug"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Archive APK
        run: |
          mkdir -p apk
          cp -r gradle/public/myApp/platforms/android/app/build/outputs/apk/debug/*.apk apk/
          echo "APK files:"
          ls apk

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v3
        with:
          name: apk-files
          path: apk/

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: "release-${{ github.sha.substr(0, 7) }}"  # First 7 characters of commit SHA
          release_name: "Release ${{ github.sha.substr(0, 7) }}"
          body: "APK build for gradle branch"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: apk/*.apk
          asset_name: MyApp-debug.apk
          asset_content_type: application/vnd.android.package-archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}